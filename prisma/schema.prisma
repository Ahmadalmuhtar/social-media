generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  firstname String
  lastname  String
  picture   String    @default("")
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  posts     Post[]
  Like      Like[]
  comments  Comment[]
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String?
  isShared  Boolean   @default(false)
  createdAt DateTime  @default(now())
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  likes     Like[]
  comments  Comment[]
}

model Like {
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  userEmail String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int

  @@id(name: "likeId", [postId, userEmail])
}

model Comment {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  content   String
  user      User      @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  userEmail String
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int
  comment   Comment?  @relation("replies", fields: [parentId], references: [id], onDelete: Cascade)
  parentId  Int?
  replies   Comment[] @relation("replies")
}
